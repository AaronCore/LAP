@{
    ViewData["Title"] = "统计列表";
}

<div id="statisticLogApp">
    <el-card class="box-card">
        <el-container>
            <el-header>
                <el-form ref="searchForm" :inline="true" :model="searchForm">
                    <el-row :gutter="10">
                        <el-col :span="14">
                            <el-form-item label="搜索：">
                                <el-input style="width:250px;" size="medium" v-model="searchForm.searchValue" autocomplete="off" placeholder="请输入关键字"></el-input>
                            </el-form-item>
                            <el-select v-model="searchForm.moduleCodeValue" filterable clearable placeholder="模块">
                                <el-option v-for="item in modules" :key="item.value" :label="item.text" :value="item.value">
                                </el-option>
                            </el-select>
                            <el-date-picker style="width:200px;" type="date" v-model="searchForm.startDate" format="yyyy-MM-dd" value-format="yyyy-MM-dd" placeholder="开始时间">
                            </el-date-picker>
                            <el-date-picker style="width:200px;" type="date" v-model="searchForm.endDate" format="yyyy-MM-dd" value-format="yyyy-MM-dd" placeholder="结束时间">
                            </el-date-picker>
                        </el-col>
                        <el-col :span="6">
                            <el-button type="primary" v-on:click="search" size="medium" icon="el-icon-search">查询</el-button>
                            <el-button type="primary" v-on:click="reset" size="medium" icon="el-icon-refresh">重置</el-button>
                        </el-col>
                    </el-row>
                </el-form>
            </el-header>
            <el-main>
                <!--列表-->
                <template>
                    <el-table :data="tableData" border size="medium" style="width: 100%;" :max-height="maxHeight">
                        <el-table-column header-align="center" align="center" prop="id" v-if="false" label="Id" width="80">
                        </el-table-column>
                        <el-table-column header-align="center" align="center" prop="module_name" width="150" label="模块">
                        </el-table-column>
                        <el-table-column header-align="center" align="center" prop="request_page" label="页面地址">
                        </el-table-column>
                        <el-table-column header-align="center" align="center" prop="action" width="150" label="动作">
                        </el-table-column>
                        <el-table-column header-align="center" align="center" prop="request_time" label="请求时间" width="200">
                        </el-table-column>
                        <el-table-column header-align="center" align="center" prop="created_time" label="创建时间" width="200">
                        </el-table-column>
                        <el-table-column header-align="center" align="center" label="操作" width="200">
                            <template slot-scope="scope">
                                <el-button v-on:click="details(scope.row)" type="primary" plain size="mini">详情</el-button>
                            </template>
                        </el-table-column>
                    </el-table>
                    <el-row :gutter="20">
                        <el-col :span="8" :offset="8">
                            <el-pagination v-on:size-change="handleSizeChange"
                                           v-on:current-change="handleCurrentChange"
                                           :page-sizes="pageSizes"
                                           :page-size="pageSize"
                                           :current-page="1"
                                           layout="total, sizes, prev, pager, next, jumper"
                                           :total="total">
                            </el-pagination>
                        </el-col>
                    </el-row>
                </template>
            </el-main>
        </el-container>
    </el-card>
</div>

@section Scripts {
    <script>
        new Vue({
            el: "#statisticLogApp",
            data() {
                return {
                    maxHeight: gobal.params.tableMaxHeight - 10,
                    tableData: null,
                    // 分页
                    pageSizes: [30, 50, 100, 150],
                    pageSize: 30,
                    pageIndex: 1,
                    total: 0,
                    searchForm: {
                        searchValue: null,
                        logLevelValue: null,
                        moduleCodeValue: null,
                        startDate: null,
                        endDate: null,
                    },
                    modules: [],
                }
            },
            methods: {
                // 查询
                search() {
                    this.pageReset();
                    this.getTableData();
                },
                // 重置
                reset() {
                    var form = this.searchForm;
                    Object.keys(form).forEach(key => (form[key] = null));
                    this.pageReset();
                    this.getTableData();
                },
                //获取列表
                getTableData() {
                    var self = this;
                    var options = {
                        pageIndex: (self.pageIndex != 0 ? self.pageIndex : 1),
                        pageSize: self.pageSize,
                        searchKey: self.searchForm.searchValue,
                        moduleCode: self.searchForm.moduleCodeValue,
                        logLevel: self.searchForm.logLevelValue,
                        startDate: self.searchForm.startDate,
                        endDate: self.searchForm.endDate,
                    };
                    $.get("/StatisticLog/Load", options, function (res) {
                        self.tableData = res.data;
                        self.pageIndex = res.pageIndex;
                        self.pageSize = res.pageSize;
                        self.total = res.total;
                    });
                },
                details(row) {
                    layer.open({
                        type: 2,
                        title: '详情',
                        shadeClose: true,
                        maxmin: true,
                        shade: 0.8,
                        area: ['95%', '90%'],
                        content: '/StatisticLog/Details?id=' + row.id
                    });
                },
                getModule() {
                    var self = this;
                    $.get("/Module/GetMoudleList", function (res) {
                        self.modules = res;
                    });
                },
                // 分页方法
                handleSizeChange(val) {
                    this.pageSize = val;
                    this.getTableData();
                },
                handleCurrentChange(val) {
                    this.pageIndex = val;
                    this.getTableData();
                },
                // 分页重置
                pageReset() {
                    this.pageIndex = 1;
                    this.pageSize = 30;
                    this.total = 0;
                }
            },
            created() {
                this.getModule();
                this.getTableData();
            }
        })
    </script>
}

