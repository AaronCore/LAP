@{
    ViewData["Title"] = "仪表盘";
}

<div id="dashboardApp">
    <el-card class="box-card">
        <el-container>
            <el-header>
                <el-form ref="searchForm" :inline="true" :model="searchForm">
                    <el-row>
                        <el-col :span="10">
                            <el-select v-model="searchForm.moduleCodeValue" filterable clearable placeholder="模块">
                                <el-option v-for="item in modules" :key="item.value" :label="item.text" :value="item.value">
                                </el-option>
                            </el-select>
                            <el-date-picker v-model="searchForm.startAndEndDate"
                                            type="datetimerange"
                                            :picker-options="pickerOptions"
                                            range-separator="至"
                                            start-placeholder="开始日期"
                                            end-placeholder="结束日期"
                                            format="yyyy-MM-dd HH:mm:ss"
                                            value-format="yyyy-MM-dd HH:mm:ss"
                                            align="right">
                            </el-date-picker>
                        </el-col>
                        <el-col :span="8">
                            <el-button type="primary" v-on:click="search" size="medium" icon="el-icon-search">查询</el-button>
                            <el-button type="primary" v-on:click="reset" size="medium" icon="el-icon-refresh">重置</el-button>
                            <el-divider direction="vertical"></el-divider>
                            <el-switch v-model="searchForm.isAuto" v-on:change="isAutoChange" inactive-text="自动">
                            </el-switch>
                            &nbsp;<el-input-number style="width:100px;" v-model="searchForm.num" controls-position="right" size="mini" :min="6" :max="60"></el-input-number>
                        </el-col>
                    </el-row>
                </el-form>
            </el-header>
        </el-container>
    </el-card>
</div>

@section Scripts {
    <script>
        new Vue({
            el: "#dashboardApp",
            data() {
                return {
                    searchForm: {
                        moduleCodeValue: null,
                        startAndEndDate: null,
                        isAuto: null,
                        num: 6
                    },
                    modules: [],
                    timer: null,
                    pickerOptions: {
                        shortcuts: [
                            {
                                text: '最近一周',
                                onClick(picker) {
                                    const end = new Date();
                                    const start = new Date();
                                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);
                                    picker.$emit('pick', [start, end]);
                                }
                            }, {
                                text: '最近一个月',
                                onClick(picker) {
                                    const end = new Date();
                                    const start = new Date();
                                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);
                                    picker.$emit('pick', [start, end]);
                                }
                            }, {
                                text: '最近三个月',
                                onClick(picker) {
                                    const end = new Date();
                                    const start = new Date();
                                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);
                                    picker.$emit('pick', [start, end]);
                                }
                            }
                        ]
                    },
                }
            },
            methods: {
                search() {
                    var self = this;
                    var options = {
                        moduleCode: self.searchForm.moduleCodeValue,
                        startDate: self.searchForm.startAndEndDate != null ? self.searchForm.startAndEndDate[0] : null,
                        endDate: self.searchForm.startAndEndDate != null ? self.searchForm.startAndEndDate[1] : null,
                    };
                    console.log(options);
                },
                reset() {
                    var form = this.searchForm;
                    Object.keys(form).forEach(key => (form[key] = null));
                },
                isAutoChange(v) {
                    if (v) {
                        this.timer = setInterval(() => {

                        }, 1000);
                    } else {
                        clearInterval(this.timer);
                        this.timer = null;
                    }
                },
                getModule() {
                    var self = this;
                    $.get("/Module/GetMoudleList", function (res) {
                        self.modules = res;
                    });
                }
            },
            created() {
                this.getModule();
            }
        });
    </script>
}